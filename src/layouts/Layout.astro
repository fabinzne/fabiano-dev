---
import '../styles/global.scss';
import { getCollection } from 'astro:content';

interface Props {
	title: string;
	currentTab?: string;
}

const { title, currentTab = 'about' } = Astro.props;

// Get collections to check for published items
const blogPosts = await getCollection('blog');

// Social media flags
const SHOW_TWITTER = false;
const SHOW_DISCORD = true;
const SHOW_INSTAGRAM = true;
const SHOW_LINKEDIN = true;
const SHOW_GITHUB = true;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Personal website" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
		<link href="https://fonts.googleapis.com/css2?family=Fira+Code:wght@400;500;600&display=swap" rel="stylesheet">
	</head>
	<body class="dark-theme">
		<label class="theme-switch">
			<input type="checkbox" id="theme-toggle">
			<span class="slider">
				<i class="fas fa-sun"></i>
				<i class="fas fa-moon"></i>
			</span>
		</label>
		<div class="ide-container">
			<aside class="sidebar">
				<div class="profile-section">
					<img src="https://github.com/fabinzne.png" alt="Profile" class="profile-image" />
					<h2>Fabiano Luiz</h2>
					<p class="bio">A passionate developer who loves creating amazing things. Senior Software Engineer at C1&T with 4+ years of experience building scalable apps using ReactJS, React Native, Node.js, and GraphQL. Currently working with Go to build robust backend systems. </p>
					<div class="social-links">
						{SHOW_TWITTER && (
							<a href="https://twitter.com/yourusername" target="_blank" rel="noopener noreferrer">
								<i class="fab fa-twitter"></i>
							</a>
						)}
						{SHOW_DISCORD && (
							<a href="https://discord.com/users/325447369942368256" target="_blank" rel="noopener noreferrer">
								<i class="fab fa-discord"></i>
							</a>
						)}
						{SHOW_INSTAGRAM && (
							<a href="https://www.instagram.com/fabinzne/" target="_blank" rel="noopener noreferrer">
								<i class="fab fa-instagram"></i>
							</a>
						)}
						{SHOW_LINKEDIN && (
							<a href="https://www.linkedin.com/in/fabiano-luiz-531318182/" target="_blank" rel="noopener noreferrer">
								<i class="fab fa-linkedin"></i>
							</a>
						)}
						{SHOW_GITHUB && (
							<a href="https://github.com/fabinzne" target="_blank" rel="noopener noreferrer">
								<i class="fab fa-github"></i>
							</a>
						)}
					</div>
				</div>
			</aside>
			<main class="main-content">
				<div class="tabs">
					<a href="/" class={`tab-button ${currentTab === 'about' ? 'active' : ''}`}>
						<i class="fas fa-file-alt"></i>
						about.md
					</a>
					{blogPosts.length > 0 && (
						<a href="/blog" class={`tab-button ${currentTab === 'blog' ? 'active' : ''}`}>
							<i class="fas fa-folder"></i>
							blog/
						</a>
					)}
					<a href="/projects" class={`tab-button ${currentTab === 'projects' ? 'active' : ''}`}>
						<i class="fas fa-folder"></i>
						projects/
					</a>
				</div>
				<div class="tab-content">
					<slot />
				</div>
			</main>
		</div>
	</body>
</html>

<script>
	const themeToggle = document.getElementById('theme-toggle') as HTMLInputElement;
	const body = document.body;

	// Check for saved theme preference
	const savedTheme = localStorage.getItem('theme') || 'dark';
	body.classList.add(`${savedTheme}-theme`);
	themeToggle.checked = savedTheme === 'light';

	themeToggle.addEventListener('change', () => {
		const isDark = !themeToggle.checked;
		const newTheme = isDark ? 'dark' : 'light';
		
		body.classList.remove('dark-theme', 'light-theme');
		body.classList.add(`${newTheme}-theme`);
		
		localStorage.setItem('theme', newTheme);
	});
</script>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}

	.theme-switch {
		position: fixed;
		top: 1rem;
		right: 1rem;
		display: inline-block;
		width: 60px;
		height: 34px;
		z-index: 1000;
	}

	.theme-switch input {
		opacity: 0;
		width: 0;
		height: 0;
	}

	.slider {
		position: absolute;
		cursor: pointer;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: var(--bg-secondary);
		transition: .4s;
		border-radius: 34px;
		display: flex;
		align-items: center;
		justify-content: space-between;
		padding: 0 10px;
		box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
	}

	.slider:before {
		position: absolute;
		content: "";
		height: 26px;
		width: 26px;
		left: 4px;
		bottom: 4px;
		background-color: var(--accent-color);
		transition: .4s;
		border-radius: 50%;
		z-index: 1;
	}

	input:checked + .slider {
		background-color: var(--bg-secondary);
	}

	input:checked + .slider:before {
		transform: translateX(26px);
	}

	.slider i {
		font-size: 1rem;
		z-index: 2;
		transition: .4s;
	}

	.slider .fa-sun {
		color: var(--accent-color);
		opacity: 0;
		transform: translateX(-20px);
	}

	.slider .fa-moon {
		color: var(--accent-color);
		opacity: 1;
		transform: translateX(0);
	}

	input:checked + .slider .fa-sun {
		opacity: 1;
		transform: translateX(0);
	}

	input:checked + .slider .fa-moon {
		opacity: 0;
		transform: translateX(20px);
	}
</style>
